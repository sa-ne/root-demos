apiVersion: v1
items:
- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: nginx
    name: nginx
  spec:
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      app: nginx
      deploymentconfig: nginx
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        labels:
          app: nginx
          deploymentconfig: nginx
      spec:
        containers:
        - image: docker.io/library/nginx:latest
          imagePullPolicy: Always
          name: nginx
          ports:
          - containerPort: 8080
            protocol: TCP
          - containerPort: 8443
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/nginx/conf.d
            name: default-conf-vol
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: default-conf
          name: default-conf-vol
    test: false
    triggers:
    - type: ConfigChange

- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: nginx
    name: nginx
  spec:
    ports:
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 80
    - name: 8443-tcp
      port: 8443
      protocol: TCP
      targetPort: 443
    selector:
      app: nginx
      deploymentconfig: nginx
    sessionAffinity: None
    type: ClusterIP

- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    labels:
      app: nginx
    name: nginx
  spec:
    port:
      targetPort: 8080-tcp
    to:
      kind: Service
      name: nginx
      weight: 100
    wildcardPolicy: None

- apiVersion: v1
  data:
    default.conf: "server {\n    listen       80;\n    server_name  localhost;\n\n    #charset
      koi8-r;\n    #access_log  /var/log/nginx/host.access.log  main;\n\n    location
      /httpbin/ {\n        proxy_pass http://httpbin.org/;\n        proxy_redirect https://httpbin.org/
      http://nginx-reverse-proxy.apps.ocp4.datr.eu/httpbin/;\n        proxy_set_header
      X-Real-IP $remote_addr;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      \           \n    }\n\n    location /products/ {\n        proxy_pass https://inventory-amazin-dev.apps.ocp4.datr.eu/products/;\n
      \       proxy_redirect https://inventory-amazin-dev.apps.ocp4.datr.eu/products/
      http://nginx-reverse-proxy.apps.ocp4.datr.eu/products/;\n        proxy_set_header
      X-Real-IP $remote_addr;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      \           \n    }\n    \n    location / {\n        root   /usr/share/nginx/html;\n
      \       index  index.html index.htm;\n    }\n\n    #error_page  404              /404.html;\n\n
      \   # redirect server error pages to the static page /50x.html\n    #\n    error_page
      \  500 502 503 504  /50x.html;\n    location = /50x.html {\n        root   /usr/share/nginx/html;\n
      \   }\n\n    # proxy the PHP scripts to Apache listening on 127.0.0.1:80\n    #\n
      \   #location ~ \\.php$ {\n    #    proxy_pass   http://127.0.0.1;\n    #}\n\n
      \   # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000\n    #\n
      \   #location ~ \\.php$ {\n    #    root           html;\n    #    fastcgi_pass
      \  127.0.0.1:9000;\n    #    fastcgi_index  index.php;\n    #    fastcgi_param
      \ SCRIPT_FILENAME  /scripts$fastcgi_script_name;\n    #    include        fastcgi_params;\n
      \   #}\n\n    # deny access to .htaccess files, if Apache's document root\n    #
      concurs with nginx's one\n    #\n    #location ~ /\\.ht {\n    #    deny  all;\n
      \   #}\n}"
  kind: ConfigMap
  metadata:
    creationTimestamp: "2020-05-11T13:27:47Z"
    name: default-conf

kind: List
metadata:
  resourceVersion: ""
  selfLink: ""