{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/basket/basket.component.css","webpack:///./src/app/basket/basket.component.html","webpack:///./src/app/basket/basket.component.ts","webpack:///./src/app/categories/categories.component.css","webpack:///./src/app/categories/categories.component.html","webpack:///./src/app/categories/categories.component.ts","webpack:///./src/app/details/details.component.css","webpack:///./src/app/details/details.component.html","webpack:///./src/app/details/details.component.ts","webpack:///./src/app/inventory/inventory.component.css","webpack:///./src/app/inventory/inventory.component.html","webpack:///./src/app/inventory/inventory.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/model/basket.ts","webpack:///./src/app/model/product.ts","webpack:///./src/app/model/user.ts","webpack:///./src/app/services/basket.service.ts","webpack:///./src/app/services/categories.service.ts","webpack:///./src/app/services/inventory.service.ts","webpack:///./src/app/services/user.service.ts","webpack:///./src/app/title-case.pipe.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;ACZA,+DAA+D,+H;;;;;;;;;;;ACA/D,6OAA6O,OAAO,20B;;;;;;;;;;;;;;;;;;ACAnM;AAGT;AAQxC;IAQE;QAFA,UAAK,GAAG,8BAA8B,CAAC;IAExB,CAAC;IAEhB,iCAAU,GAAV,UAAW,IAAW;QACpB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,OAAO,CAAC,GAAG,CAAC,qCAAqC,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QAC/E,OAAO,CAAC,GAAG,CAAC,8BAA8B,GAAG,IAAI,CAAC,EAAE,GAAG,KAAK,GAAG,IAAI,CAAC,QAAQ,GAAE,cAAc,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACnH,IAAI,CAAC,MAAM,GAAG,IAAI,oDAAM,EAAE,CAAC;QAC3B,IAAI,CAAC,MAAM,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ;QACnC,OAAO,CAAC,GAAG,CAAC,4CAA4C,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;IAC1F,CAAC;IAED,uCAAgB,GAAhB,UAAiB,QAAoB;QACnC,OAAO,CAAC,GAAG,CAAC,oCAAoC,GAAG,QAAQ,CAAC,CAAC;QAC7D,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;IAC3B,CAAC;IAED,2CAAoB,GAApB,UAAqB,OAAgB;QACjC,OAAO,CAAC,GAAG,CAAC,wCAAwC,GAAE,OAAO,CAAC,EAAE,GAAC,GAAG,GAAC,OAAO,CAAC,IAAI,GAAC,GAAG,GAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QACrG,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;IAC3B,CAAC;IAED,sCAAe,GAAf,UAAgB,MAAe;QAC3B,OAAO,CAAC,GAAG,CAAC,iDAAiD,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;QAC7F,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACzB,CAAC;IAhCU,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,yFAAmC;;SAEpC,CAAC;;OACW,YAAY,CAkCxB;IAAD,mBAAC;CAAA;AAlCwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXiC;AACjB;AACM;AAEC;AACW;AAEc;AACJ;AACG;AACN;AAChB;AACa;AACH;AACF;AACD;AACH;AAoBtD;IAAA;IAAyB,CAAC;IAAb,SAAS;QAlBrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;gBACZ,iFAAkB;gBAClB,oFAAmB;gBACnB,+DAAa;gBACb,4EAAgB;gBAChB,yEAAe;gBACf,sEAAc;aACf;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,0DAAW;gBACX,qEAAgB;aACjB;YACD,SAAS,EAAE,CAAC,4EAAgB,EAAE,8EAAiB,EAAE,uEAAa,EAAE,mEAAW,CAAC;YAC5E,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;ACpCtB,+DAA+D,2I;;;;;;;;;;;ACA/D,oOAAoO,WAAW,0GAA0G,cAAc,usBAAusB,0BAA0B,yGAAyG,0BAA0B,wEAAwE,iBAAiB,gV;;;;;;;;;;;;;;;;;;;;ACA3rC;AAE9C;AAElB;AACJ;AAOrC;IAKE,yBACU,aAA4B;QAA5B,kBAAa,GAAb,aAAa,CAAe;QAH5B,kBAAa,GAAG,IAAI,0DAAY,EAAU,CAAC;IAIjD,CAAC;IAEL,kCAAQ,GAAR;QACE,OAAO,CAAC,GAAG,CAAC,kCAAkC,GAAI,IAAI,CAAC,IAAI,CAAC,CAAC;IAC/D,CAAC;IAED,qCAAW,GAAX,UAAY,OAAsB;QAAlC,iBAiBC;QAhBC,OAAO,CAAC,GAAG,CAAC,0BAA0B,CAAC,CAAC;QACxC,KAAK,IAAI,QAAQ,IAAI,OAAO,EAAE;YAC5B,IAAI,IAAI,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;YAC7B,IAAI,GAAG,GAAI,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;YAC7C,IAAI,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;YAC9C,OAAO,CAAC,GAAG,CAAI,QAAQ,yBAAoB,GAAG,0BAAqB,IAAM,CAAC,CAAC;YAC3E,IAAI,QAAQ,IAAI,QAAQ,IAAI,IAAI,CAAC,MAAM,EAAG;gBACxC,OAAO,CAAC,GAAG,CAAC,sBAAsB,CAAC,CAAC;gBACpC,OAAO,CAAC,GAAG,CAAC,oCAAoC,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;gBAChF,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,SAAS,CAAE,UAAC,MAAc;oBAClE,OAAO,CAAC,GAAG,CAAC,mCAAmC,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC;oBAC1E,KAAI,CAAC,MAAM,GAAG,MAAM;oBACpB,KAAI,CAAC,aAAa,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;gBACvC,CAAC,CAAC,CAAC;aACJ;SACF;IACH,CAAC;IAED,8CAAoB,GAApB,UAAqB,OAAgB;QAArC,iBASC;QARC,OAAO,CAAC,GAAG,CAAC,sCAAsC,CAAC,CAAC;QACpD,OAAO,CAAC,GAAG,CAAC,yBAAyB,GAAE,OAAO,CAAC,WAAW,CAAC,CAAC;QAC5D,IAAI,CAAC,aAAa,CAAC,uBAAuB,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,SAAS,CAAE,UAAC,MAAc;YACxF,OAAO,CAAC,GAAG,CAAC,oDAAoD,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC;YAC3F,KAAI,CAAC,MAAM,GAAG,MAAM;YACpB,KAAI,CAAC,aAAa,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;YACrC,KAAI,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAClC,CAAC,CAAC,CAAC;IACL,CAAC;IAxCQ;QAAR,2DAAK,EAAE;wEAAO,gDAAI;iDAAC;IACX;QAAR,2DAAK,EAAE;wEAAU,oDAAM;mDAAC;IACf;QAAT,4DAAM,EAAE;;0DAA4C;IAH1C,eAAe;QAL3B,+DAAS,CAAC;YACT,QAAQ,EAAE,YAAY;YACtB,sGAAsC;;SAEvC,CAAC;+EAOyB,sEAAa;OAN3B,eAAe,CA2C3B;IAAD,sBAAC;CAAA;AA3C2B;;;;;;;;;;;;ACZ5B,+DAA+D,uJ;;;;;;;;;;;ACA/D,oMAAoM,uBAAuB,qBAAqB,mB;;;;;;;;;;;;;;;;;;;ACAzK;AAEJ;AACF;AAQjE;IAQE,6BAEU,iBAAoC,EACpC,gBAAkC;QADlC,sBAAiB,GAAjB,iBAAiB,CAAmB;QACpC,qBAAgB,GAAhB,gBAAgB,CAAkB;QATlC,gBAAW,GAAG,IAAI,0DAAY,EAAa,CAAC;IAUlD,CAAC;IAEL,sCAAQ,GAAR;QACE,OAAO,CAAC,GAAG,CAAC,8BAA8B,CAAC,CAAC;QAC5C,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC;IAED,2CAAa,GAAb;QAAA,iBAEC;QADC,IAAI,CAAC,iBAAiB,CAAC,aAAa,EAAE,CAAC,SAAS,CAAC,oBAAU,IAAI,YAAI,CAAC,UAAU,GAAG,UAAU,EAA5B,CAA4B,CAAC,CAAC;IAC/F,CAAC;IAED,6CAAe,GAAf,UAAgB,QAAiB;QAC/B,IAAI,CAAC,gBAAgB,GAAG,QAAQ,CAAC;QACjC,OAAO,CAAC,GAAG,CAAC,0CAA0C,GAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;QAC9E,IAAI,CAAC,yBAAyB,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;IACxD,CAAC;IAED,uDAAyB,GAAzB,UAA0B,QAAgB;QAA1C,iBAOC;QANC,OAAO,CAAC,GAAG,CAAC,mDAAmD,GAAG,QAAQ,CAAC,CAAC;QAC5E,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAE,UAAC,QAAmB;YAC/E,OAAO,CAAC,GAAG,CAAC,mCAAmC,GAAG,QAAQ,CAAC,CAAC;YAC5D,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YAChC,KAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QAC3B,CAAC,CAAC,CAAC;IACL,CAAC;IAlCS;QAAT,4DAAM,EAAE;;4DAA6C;IAF3C,mBAAmB;QAL/B,+DAAS,CAAC;YACT,QAAQ,EAAE,gBAAgB;YAC1B,kHAA0C;;SAE3C,CAAC;+EAW6B,8EAAiB;YAClB,4EAAgB;OAXjC,mBAAmB,CAsC/B;IAAD,0BAAC;CAAA;AAtC+B;;;;;;;;;;;;ACXhC,+DAA+D,+I;;;;;;;;;;;ACA/D,qFAAqF,cAAc,0EAA0E,0BAA0B,gBAAgB,0BAA0B,oDAAoD,eAAe,mK;;;;;;;;;;;;;;;;;;;;ACArO;AAGpC;AAGsB;AACN;AAO3D;IAME,0BACU,gBAAkC,EAClC,aAA4B;QAD5B,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,kBAAa,GAAb,aAAa,CAAe;QAJ5B,kBAAa,GAAG,IAAI,0DAAY,EAAU,CAAC;IAKlD,CAAC;IAEJ,mCAAQ,GAAR;QACE,OAAO,CAAC,GAAG,CAAC,2BAA2B,CAAC,CAAC;IAC3C,CAAC;IAED,wCAAa,GAAb,UAAc,OAAgB;QAA9B,iBAOC;QANC,OAAO,CAAC,GAAG,CAAC,kBAAkB,GAAI,OAAO,CAAC,EAAE,GAAG,GAAG,GAAG,OAAO,CAAC,IAAI,CAAE,CAAC;QACpE,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,OAAO,CAAC,CAAC,SAAS,CAAE,UAAC,MAAe;YACxE,OAAO,CAAC,GAAG,CAAC,gCAAgC,GAAE,MAAM,CAAC,EAAE,CAAC,CAAC;YACzD,KAAI,CAAC,MAAM,GAAG,MAAM,CAAC;YACrB,KAAI,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAClC,CAAC,CAAC,CAAC;IACL,CAAC;IApBQ;QAAR,2DAAK,EAAE;wEAAU,sDAAO;qDAAC;IAEhB;QAAT,4DAAM,EAAE;;2DAA4C;IAJ1C,gBAAgB;QAL5B,+DAAS,CAAC;YACT,QAAQ,EAAE,aAAa;YACvB,yGAAuC;;SAExC,CAAC;+EAQ4B,4EAAgB;YACnB,sEAAa;OAR3B,gBAAgB,CAwB5B;IAAD,uBAAC;CAAA;AAxB4B;;;;;;;;;;;;ACd7B,+DAA+D,mJ;;;;;;;;;;;ACA/D,yWAAyW,0BAA0B,yIAAyI,0BAA0B,sF;;;;;;;;;;;;;;;;;;ACAvd;AAEd;AAOjE;IAKE,4BACU,gBAAkC;QAAlC,qBAAgB,GAAhB,gBAAgB,CAAkB;QAJlC,oBAAe,GAAG,IAAI,0DAAY,EAAW,CAAC;IAKrD,CAAC;IAEJ,qCAAQ,GAAR;QACE,OAAO,CAAC,GAAG,CAAC,kCAAkC,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC;IAClE,CAAC;IAED,2CAAc,GAAd,UAAe,OAAgB;QAA/B,iBAOC;QANC,OAAO,CAAC,GAAG,CAAC,yCAAyC,GAAG,OAAO,CAAC,EAAE,GAAG,GAAG,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC;QACzF,IAAI,CAAC,gBAAgB,CAAC,cAAc,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,SAAS,CAAE,UAAC,OAAiB;YAC5E,OAAO,CAAC,GAAG,CAAC,0CAA0C,GAAG,OAAO,CAAC,CAAC;YAClE,KAAI,CAAC,eAAe,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YACnC,KAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACzB,CAAC,CAAC,CAAC;IACL,CAAC;IAnBQ;QAAR,2DAAK,EAAE;;wDAAqB;IACnB;QAAT,4DAAM,EAAE;;+DAA+C;IAF7C,kBAAkB;QAL9B,+DAAS,CAAC;YACT,QAAQ,EAAE,eAAe;YACzB,+GAAyC;;SAE1C,CAAC;+EAO4B,4EAAgB;OANjC,kBAAkB,CAqB9B;IAAD,yBAAC;CAAA;AArB8B;;;;;;;;;;;;ACT/B,+DAA+D,2I;;;;;;;;;;;ACA/D,yCAAyC,unBAAunB,YAAY,uB;;;;;;;;;;;;;;;;;;;ACApmB;AAEnC;AACkB;AAOvD;IAKE,wBAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;QAJ5C,SAAI,GAAU,IAAI,gDAAI,EAAE,CAAC;QACf,iBAAY,GAAG,IAAI,0DAAY,EAAQ,CAAC;QAClD,aAAQ,GAAa,KAAK,CAAC;IAEqB,CAAC;IAEjD,iCAAQ,GAAR;QACE,OAAO,CAAC,GAAG,CAAC,yBAAyB,CAAC,CAAC;IACzC,CAAC;IAED,iCAAQ,GAAR;QAAA,iBAUC;QATC,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QACrB,OAAO,CAAC,GAAG,CAAC,kBAAkB,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACrD,OAAO,CAAC,GAAG,CAAC,kBAAkB,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACrD,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,SAAS,CAAE,UAAC,IAAU;YACtD,OAAO,CAAC,GAAG,CAAC,0BAA0B,GAAG,IAAI,CAAC,EAAE,GAAG,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC;YAC1E,KAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACrB,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAC7B,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACnB,CAAC,CAAC,CAAC;IACL,CAAC;IACD,sBAAI,oCAAQ;aAAZ,cAAiB,OAAO,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,GAAC;;;OAAA;IAC/D,sBAAI,sCAAU;aAAd,cAAmB,OAAO,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;;;OAAA;IArB5C;QAAT,4DAAM,EAAE;;wDAAyC;IAFvC,cAAc;QAL1B,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;YACrB,mGAAqC;;SAEtC,CAAC;+EAMiC,kEAAW;OALjC,cAAc,CAwB1B;IAAD,qBAAC;CAAA;AAxB0B;;;;;;;;;;;;;ACP3B;AAAA;AAAA;IAAA;IAKA,CAAC;IAAD,aAAC;AAAD,CAAC;;;;;;;;;;;;;;ACRD;AAAA;AAAA;IAAA;IAKA,CAAC;IAAD,cAAC;AAAD,CAAC;;;;;;;;;;;;;;ACLD;AAAA;AAAA;IAAA;IAOA,CAAC;IAAD,WAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;ACP0C;AAEoB;AACvB;AACc;AAKO;AAE7D,IAAM,WAAW,GAAG;IAClB,OAAO,EAAE,IAAI,gEAAW,CAAC,EAAE,cAAc,EAAE,kBAAkB,EAAE,CAAC;CACjE,CAAC;AAGF;IAME,uBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAF5B,cAAS,GAAM,qEAAW,CAAC,cAAc,gBAAa,CAAC;IAEvB,CAAC;IAEzC,iCAAS,GAAT,UAAU,MAAc;QACtB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACvB,CAAC;IAED,iCAAS,GAAT,UAAU,MAAc;QAAxB,iBAQC;QAPC,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;QAChC,IAAM,GAAG,GAAM,IAAI,CAAC,SAAS,aAAQ,MAAM,CAAC,EAAI,CAAC;QACjD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAS,GAAG,CAAC;aAChC,IAAI,CACH,0DAAG,CAAC,WAAC,IAAI,YAAI,CAAC,GAAG,CAAC,gBAAgB,CAAC,EAA1B,CAA0B,CAAC,EACpC,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAS,WAAW,CAAC,CAAC,CAClD,CAAC;IACJ,CAAC;IAED,0CAAkB,GAAlB,UAAmB,OAAgB;QAAnC,iBAQC;QAPC,OAAO,CAAC,GAAG,CAAC,oBAAoB,CAAC,CAAC;QAClC,IAAM,GAAG,GAAM,IAAI,CAAC,SAAS,SAAI,IAAI,CAAC,MAAM,CAAC,EAAE,aAAQ,OAAO,CAAC,EAAI,CAAC;QACpE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAS,GAAG,EAAE,IAAI,EAAE,WAAW,CAAC;aACnD,IAAI,CACH,0DAAG,CAAC,WAAC,IAAI,YAAI,CAAC,GAAG,CAAC,gBAAgB,CAAC,EAA1B,CAA0B,CAAC,EACpC,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAS,cAAc,CAAC,CAAC,CACrD,CAAC;IACJ,CAAC;IAED,+CAAuB,GAAvB,UAAwB,WAAmB;QAA3C,iBASC;QARC,OAAO,CAAC,GAAG,CAAC,yBAAyB,CAAC,CAAC;QACvC,IAAM,GAAG,GAAM,IAAI,CAAC,SAAS,SAAI,IAAI,CAAC,MAAM,CAAC,EAAE,gBAAW,WAAa,CAAC;QACxE,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAS,GAAG,EAAE,WAAW,CAAC;aAChD,IAAI,CACH,0DAAG,CAAC,WAAC,IAAI,YAAI,CAAC,GAAG,CAAC,gBAAgB,CAAC,EAA1B,CAA0B,CAAC,EACpC,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAS,cAAc,CAAC,CAAC,CACrD,CAAC;IAEJ,CAAC;IACD;;;;;OAKG;IACK,mCAAW,GAAnB,UAAwB,SAAuB,EAAE,MAAU;QAA3D,iBAYC;QAZuB,mDAAuB;QAC7C,OAAO,UAAC,KAAU;YAEhB,wDAAwD;YACxD,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,yBAAyB;YAE/C,8DAA8D;YAC9D,KAAI,CAAC,GAAG,CAAI,SAAS,iBAAY,KAAK,CAAC,OAAS,CAAC,CAAC;YAElD,yDAAyD;YACzD,OAAO,+CAAE,CAAC,MAAW,CAAC,CAAC;QACzB,CAAC,CAAC;IACJ,CAAC;IAED,wDAAwD;IAChD,2BAAG,GAAX,UAAY,OAAe;QACzB,OAAO,CAAC,GAAG,CAAC,iBAAiB,GAAG,OAAO,CAAC,CAAC;IAC3C,CAAC;IAjEU,aAAa;QADzB,gEAAU,EAAE;+EAOe,+DAAU;OANzB,aAAa,CAkEzB;IAAD,oBAAC;CAAA;AAlEyB;;;;;;;;;;;;;;;;;;;;;;AChBiB;AAEoB;AACvB;AACc;AAEO;AAE7D,IAAM,WAAW,GAAG;IAClB,OAAO,EAAE,IAAI,gEAAW,CAAC,EAAE,cAAc,EAAE,kBAAkB,EAAE,CAAC;CACjE,CAAC;AAGF;IAIE,2BAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAF5B,mBAAc,GAAM,qEAAW,CAAC,iBAAiB,wBAAqB,CAAC;IAEvC,CAAC;IAEzC,yCAAa,GAAb;QAAA,iBAOC;QANC,IAAM,GAAG,GAAG,KAAG,IAAI,CAAC,cAAgB,CAAC;QACrC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAW,GAAG,CAAC;aAClC,IAAI,CACH,0DAAG,CAAC,kBAAQ,IAAI,YAAI,CAAC,GAAG,CAAC,wBAAwB,CAAC,EAAlC,CAAkC,CAAC,EACnD,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAW,eAAe,CAAC,CAAC,CACxD,CAAC;IACJ,CAAC;IAED;;;;;OAKG;IACK,uCAAW,GAAnB,UAAwB,SAAuB,EAAE,MAAU;QAA3D,iBAYC;QAZuB,mDAAuB;QAC7C,OAAO,UAAC,KAAU;YAEhB,wDAAwD;YACxD,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,yBAAyB;YAE/C,8DAA8D;YAC9D,KAAI,CAAC,GAAG,CAAI,SAAS,iBAAY,KAAK,CAAC,OAAS,CAAC,CAAC;YAElD,yDAAyD;YACzD,OAAO,+CAAE,CAAC,MAAW,CAAC,CAAC;QACzB,CAAC,CAAC;IACJ,CAAC;IAED,wDAAwD;IAChD,+BAAG,GAAX,UAAY,OAAe;QACzB,OAAO,CAAC,GAAG,CAAC,qBAAqB,GAAG,OAAO,CAAC,CAAC;IAC/C,CAAC;IAtCU,iBAAiB;QAD7B,gEAAU,EAAE;+EAKe,+DAAU;OAJzB,iBAAiB,CAuC7B;IAAD,wBAAC;CAAA;AAvC6B;;;;;;;;;;;;;;;;;;;;;;ACbY;AAEqB;AACvB;AACc;AAGO;AAE7D,IAAM,WAAW,GAAG;IAClB,OAAO,EAAE,IAAI,gEAAW,CAAC,EAAE,cAAc,EAAE,kBAAkB,EAAE,CAAC;CACjE,CAAC;AAGF;IAIE,0BAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAF5B,iBAAY,GAAM,qEAAW,CAAC,iBAAiB,kBAAe,CAAC;IAEhC,CAAC;IAExC,yCAAc,GAAd;QAAA,iBAQC;QANC,IAAM,GAAG,GAAM,IAAI,CAAC,YAAY,SAAM,CAAC;QACvC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAY,GAAG,CAAC;aACnC,IAAI,CACH,0DAAG,CAAC,kBAAQ,IAAI,YAAI,CAAC,GAAG,CAAC,sBAAsB,CAAC,EAAhC,CAAgC,CAAC,EACjD,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAY,oBAAoB,CAAC,CAAC,CAC9D,CAAC;IACJ,CAAC;IAED,4CAAiB,GAAjB,UAAkB,IAAY;QAA9B,iBAOC;QANC,IAAM,GAAG,GAAM,IAAI,CAAC,YAAY,cAAS,IAAM,CAAC;QAChD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAY,GAAG,CAAC,CAAC,IAAI,CACvC,0DAAG,CAAC,WAAC,IAAI,YAAI,CAAC,GAAG,CAAC,2BAAyB,IAAM,CAAC,EAAzC,CAAyC,CAAC,EACnD,0DAAG,CAAC,kBAAQ,IAAI,YAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,EAAlC,CAAkC,CAAC,EACnD,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAY,4BAA0B,IAAM,CAAC,CAAC,CAC1E,CAAC;IACJ,CAAC;IAED,yCAAc,GAAd,UAAe,EAAU;QAAzB,iBAOC;QANC,IAAM,GAAG,GAAM,IAAI,CAAC,YAAY,SAAI,EAAI,CAAC;QACzC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAU,GAAG,CAAC,CAAC,IAAI,CACrC,0DAAG,CAAC,WAAC,IAAI,YAAI,CAAC,GAAG,CAAC,wBAAsB,EAAI,CAAC,EAApC,CAAoC,CAAC,EAC9C,0DAAG,CAAC,iBAAO,IAAI,YAAI,CAAC,eAAe,CAAC,OAAO,CAAC,EAA7B,CAA6B,CAAC,EAC7C,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAU,mBAAiB,EAAI,CAAC,CAAC,CAC7D,CAAC;IACJ,CAAC;IAED,8CAAmB,GAAnB,UAAoB,QAAoB;QACtC,OAAO,CAAC,GAAG,CAAC,sDAAsD,GAAG,QAAQ,CAAC,CAAC;IACjF,CAAC;IAED,0CAAe,GAAf,UAAgB,OAAgB;QAC9B,OAAO,CAAC,GAAG,CAAC,iDAAiD,GAAI,OAAO,CAAC,EAAE,GAAG,GAAG,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC;IACpG,CAAC;IACD;;;;;OAKG;IACK,sCAAW,GAAnB,UAAwB,SAAuB,EAAE,MAAU;QAA3D,iBAYC;QAZuB,mDAAuB;QAC7C,OAAO,UAAC,KAAU;YAEhB,wDAAwD;YACxD,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,yBAAyB;YAE/C,8DAA8D;YAC9D,KAAI,CAAC,GAAG,CAAI,SAAS,iBAAY,KAAK,CAAC,OAAS,CAAC,CAAC;YAElD,yDAAyD;YACzD,OAAO,+CAAE,CAAC,MAAW,CAAC,CAAC;QACzB,CAAC,CAAC;IACJ,CAAC;IAED,wDAAwD;IAChD,8BAAG,GAAX,UAAY,OAAe;QACzB,OAAO,CAAC,GAAG,CAAC,oBAAoB,GAAG,OAAO,CAAC,CAAC;IAC9C,CAAC;IAhEU,gBAAgB;QAD5B,gEAAU,EAAE;+EAKe,+DAAU;OAJzB,gBAAgB,CAiE5B;IAAD,uBAAC;CAAA;AAjE4B;;;;;;;;;;;;;;;;;;;;;;ACdc;AAEoB;AACvB;AACc;AAIO;AAE7D,IAAM,WAAW,GAAG;IAClB,OAAO,EAAE,IAAI,gEAAW,CAAC,EAAE,cAAc,EAAE,kBAAkB,EAAE,CAAC;CACjE,CAAC;AAGF;IAIE,qBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAF5B,YAAO,GAAM,qEAAW,CAAC,YAAY,SAAM,CAAC;IAEZ,CAAC;IAEzC,2BAAK,GAAL,UAAM,IAAW;QAAjB,iBAQC;QAPC,OAAO,CAAC,GAAG,CAAC,2BAA2B,CAAC,CAAC;QACzC,IAAM,GAAG,GAAM,IAAI,CAAC,OAAO,WAAQ,CAAC;QACpC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAO,GAAG,EAAE,IAAI,EAAE,WAAW,CAAC;aAClD,IAAI,CACH,0DAAG,CAAC,WAAC,IAAI,YAAI,CAAC,GAAG,CAAC,cAAc,CAAC,EAAxB,CAAwB,CAAC,EAClC,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAO,OAAO,CAAC,CAAC,CAC5C,CAAC;IACJ,CAAC;IAED;;;;;OAKG;IACK,iCAAW,GAAnB,UAAwB,SAAuB,EAAE,MAAU;QAA3D,iBAYC;QAZuB,mDAAuB;QAC7C,OAAO,UAAC,KAAU;YAEhB,wDAAwD;YACxD,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,yBAAyB;YAE/C,8DAA8D;YAC9D,KAAI,CAAC,GAAG,CAAI,SAAS,iBAAY,KAAK,CAAC,OAAS,CAAC,CAAC;YAElD,yDAAyD;YACzD,OAAO,+CAAE,CAAC,MAAW,CAAC,CAAC;QACzB,CAAC,CAAC;IACJ,CAAC;IAED,wDAAwD;IAChD,yBAAG,GAAX,UAAY,OAAe;QACzB,OAAO,CAAC,GAAG,CAAC,eAAe,GAAG,OAAO,CAAC,CAAC;IACzC,CAAC;IAvCU,WAAW;QADvB,gEAAU,EAAE;+EAKe,+DAAU;OAJzB,WAAW,CAyCvB;IAAD,kBAAC;CAAA;AAzCuB;;;;;;;;;;;;;;;;;;ACf4B;AAKpD;IAAA;IAOA,CAAC;IALC,iCAAS,GAAT,UAAU,KAAc;QACtB,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;YAC9B,KAAK,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,aAAG,IAAI,UAAG,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,EAAlD,CAAkD,CAAE,CAAC,CAAC;IAC1F,CAAC;IALU,aAAa;QAHzB,0DAAI,CAAC;YACJ,IAAI,EAAE,WAAW;SAClB,CAAC;OACW,aAAa,CAOzB;IAAD,oBAAC;CAAA;AAPyB;;;;;;;;;;;;;ACL1B;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;IACjB,iBAAiB,EAAG,gDAAgD;IACpE,cAAc,EAAG,gDAAgD;IACjE,YAAY,EAAG,gDAAgD;CAChE,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;AClBnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAAlB,CAAkB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<p>\\n<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <nav class=\\\"navbar navbar-default\\\">\\n        <div class=\\\"navbar-header\\\">\\n          <a class=\\\"navbar-brand\\\" href=\\\"#\\\">{{title}}</a>\\n        </div>\\n        <div class=\\\"collapse navbar-collapse\\\">\\n          <app-categories (productList)=\\\"onNewProductList($event)\\\"></app-categories>\\n          <app-login (loggedInUser)=\\\"onNewLogin($event)\\\"></app-login>\\n        </div>\\n      </nav>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-1\\\"></div>\\n    <div class=\\\"col-md-2\\\">\\n      <app-inventory [products]=\\\"products\\\" (selectedProduct)=\\\"onNewSelectedProduct($event)\\\"></app-inventory>\\n    </div>\\n    <div class=\\\"col-md-4\\\">\\n      <app-details [product]=\\\"product\\\" (updatedBasket)=\\\"onUpdatedBasket($event)\\\"></app-details>\\n    </div>\\n    <div class=\\\"col-md-4\\\">\\n      <app-basket [user]=\\\"user\\\" [basket]=\\\"basket\\\" (updatedBasket)=\\\"onUpdatedBasket($event)\\\"></app-basket>\\n    </div>\\n  </div>\\n</div><!-- /.container-fluid -->\\n\"","import { Component, Input } from '@angular/core';\n\nimport { Product } from './model/product'\nimport { Basket } from './model/basket';\nimport { User } from './model/user';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  user: User;\n  products: Product[];\n  product: Product;\n  basket: Basket;\n\n  title = 'Amazin - Shopping Reimagined';\n\n  constructor() {}\n\n  onNewLogin(user : User)  {\n    this.user = user;\n    console.log(\"AppComponent : onNewLogin : JSON : \" + JSON.stringify(this.user));\n    console.log(\"AppComponent : onNewLogin : \" + user.id + \" : \" + user.username+ \" basketId : \" + this.user.basketId);\n    this.basket = new Basket();\n    this.basket.id = this.user.basketId\n    console.log(\"AppComponent : onNewLogin : Basket JSON : \" + JSON.stringify(this.basket));\n  }\n\n  onNewProductList(products : Product[])  {\n    console.log(\"AppComponent : onNewProductList : \" + products);\n    this.products = products;\n  }\n\n  onNewSelectedProduct(product: Product)  {\n      console.log(\"AppComponent : onNewSelectedProduct : \" +product.id+\":\"+product.name+\":\"+product.price);\n      this.product = product;\n  }\n\n  onUpdatedBasket(basket : Basket)  {\n      console.log(\"AppComponent : onUpdatedBasket : Basket JSON : \" + JSON.stringify(this.basket));\n      this.basket = basket;\n  }\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppComponent } from './app.component';\n\nimport { FormsModule }    from '@angular/forms';\nimport { HttpClientModule }    from '@angular/common/http';\nimport { AppRoutingModule }     from './app-routing.module';\nimport { InventoryService }          from './services/inventory.service';\nimport { InventoryComponent } from './inventory/inventory.component';\nimport { CategoriesComponent } from './categories/categories.component';\nimport { CategoriesService } from './services/categories.service';\nimport { TitleCasePipe } from './title-case.pipe';\nimport { DetailsComponent } from './details/details.component';\nimport { BasketComponent } from './basket/basket.component';\nimport { BasketService } from './services/basket.service';\nimport { LoginComponent } from './login/login.component';\nimport { UserService } from './services/user.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    InventoryComponent,\n    CategoriesComponent,\n    TitleCasePipe,\n    DetailsComponent,\n    BasketComponent,\n    LoginComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n  ],\n  providers: [InventoryService, CategoriesService, BasketService, UserService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Jhc2tldC9iYXNrZXQuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div *ngIf=\\\"user\\\">\\n  <nav class=\\\"navbar navbar-default\\\">\\n    <div class=\\\"container-fluid\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-6\\\">\\n          <div class=\\\"navbar-brand\\\">Basket # {{basket.id}}</div>\\n        </div>\\n        <div class=\\\"col-md-6\\\">\\n          <div class=\\\"navbar-brand\\\">Total £ {{basket.total}}</div>\\n        </div>\\n      </div>\\n    </div>\\n  </nav>\\n  <div class=\\\"list-group\\\">\\n    <div class=\\\"list-group-item\\\">\\n      <div class=\\\"container-fluid\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-2\\\"></div>\\n          <div class=\\\"col-md-4\\\">\\n            <h4>Item</h4>\\n          </div>\\n          <div class=\\\"col-md-3\\\">\\n            <h4>Price</h4>\\n          </div>\\n          <div class=\\\"col-md-3\\\">\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <div *ngFor=\\\"let product of basket.products\\\" class=\\\"list-group-item\\\">\\n      <div class=\\\"container-fluid\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-2\\\">\\n            <img src=\\\"assets/{{product.name | lowercase}}.jpeg\\\" height=\\\"32\\\" width=\\\"32\\\">\\n          </div>\\n          <div class=\\\"col-md-4\\\">\\n            {{product.name | titlecase}}\\n          </div>\\n          <div class=\\\"col-md-4\\\">\\n            £ {{ product.price }}\\n          </div>\\n          <div class=\\\"col-md-2\\\">\\n            <a href=\\\"#\\\" (click)=\\\"onClickRemoveProduct(product)\\\" class=\\\"btn btn-primary\\\">\\n              <span class=\\\"glyphicon glyphicon-remove\\\" aria-hidden=\\\"true\\\"></span>\\n            </a>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit, OnChanges, Input, Output, SimpleChanges, EventEmitter } from '@angular/core';\n\nimport { BasketService } from '../services/basket.service';\nimport { Product } from '../model/product';\nimport { Basket } from '../model/basket';\nimport { User } from '../model/user';\n\n@Component({\n  selector: 'app-basket',\n  templateUrl: './basket.component.html',\n  styleUrls: ['./basket.component.css']\n})\nexport class BasketComponent implements OnInit {\n  @Input() user: User;\n  @Input() basket : Basket;\n  @Output() updatedBasket = new EventEmitter<Basket>();\n\n  constructor(\n    private basketService: BasketService\n  ) { }\n\n  ngOnInit() {\n    console.log(\"BasketComponent ngOnInit user : \"  + this.user);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    console.log(\"Something has changed !!\");\n    for (let propName in changes) {\n      let chng = changes[propName];\n      let cur  = JSON.stringify(chng.currentValue);\n      let prev = JSON.stringify(chng.previousValue);\n      console.log(`${propName}: currentValue = ${cur}, previousValue = ${prev}`);\n      if (propName == \"basket\" && this.basket)  {\n        console.log(\"lets load the basket\");\n        console.log(\"BasketComponent : basket BEFORE : \" + JSON.stringify(this.basket));\n        this.basketService.getBasket(this.basket).subscribe( (basket: Basket) => {\n          console.log(\"BasketComponent : basket AFTER : \" + JSON.stringify(basket));\n          this.basket = basket\n          this.basketService.setBasket(basket);\n        });\n      }\n    }\n  }\n\n  onClickRemoveProduct(product: Product)  {\n    console.log(\"BasketComponent onClickRemoveProduct\");\n    console.log(\"Delete item at index : \" +product.basketIndex);\n    this.basketService.removeProductFromBasket(product.basketIndex).subscribe( (basket: Basket) => {\n      console.log(\"BasketComponent : removeProductFromBasket AFTER : \" + JSON.stringify(basket));\n      this.basket = basket\n      this.basketService.setBasket(basket);\n      this.updatedBasket.emit(basket);\n    });\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NhdGVnb3JpZXMvY2F0ZWdvcmllcy5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<ul class=\\\"nav navbar-nav\\\">\\n  <li *ngFor=\\\"let category of categories\\\">\\n    <button (click)=onClickCategory(category) type=\\\"button\\\" class=\\\"btn btn-default navbar-btn\\\">{{ category | titleCase}}</button>\\n    &nbsp;\\n  </li>\\n</ul>\\n\"","import { Component, OnInit, EventEmitter, Output} from '@angular/core';\n\nimport { CategoriesService } from '../services/categories.service';\nimport { InventoryService } from '../services/inventory.service';\nimport { Product } from '../model/product';\n\n@Component({\n  selector: 'app-categories',\n  templateUrl: './categories.component.html',\n  styleUrls: ['./categories.component.css']\n})\nexport class CategoriesComponent implements OnInit {\n\n  @Output() productList = new EventEmitter<Product[]>();\n\n  categories : string[];\n  selectedCategory: string;\n  products: Product[];\n\n  constructor\n  (\n    private categoriesService: CategoriesService,\n    private inventoryService: InventoryService\n  ) { }\n\n  ngOnInit() {\n    console.log(\"CategoriesComponent ngOnInit\");\n    this.getCategories();\n  }\n\n  getCategories(): void {\n    this.categoriesService.getCategories().subscribe(categories => this.categories = categories);\n  }\n\n  onClickCategory(category : string): void {\n    this.selectedCategory = category;\n    console.log(\"CategoriesComponent selected category : \"+this.selectedCategory);\n    this.getAllProductsForCategory(this.selectedCategory);\n  }\n\n  getAllProductsForCategory(category: string): void {\n    console.log(\"CategoriesComponent get inventory for category : \" + category);\n    this.inventoryService.getProductsByType(category).subscribe( (products: Product[]) => {\n      console.log(\"CategoriesComponent : products : \" + products);\n      this.productList.emit(products);\n      this.products = products;\n    });\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2RldGFpbHMvZGV0YWlscy5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div *ngIf=\\\"product\\\">\\n  <div class=\\\"list-group\\\">\\n      <h1>{{product.name}}</h1>\\n      <p><img class=\\\"img-responsive center-block\\\" src=\\\"assets/{{product.name | lowercase}}.jpeg\\\" alt=\\\"{{product.name | lowercase}} image\\\"></p>\\n      <p><h3 class=\\\"pull-left\\\">£ {{product.price}}</h3>\\n        <a class=\\\"btn btn-primary btn-lg pull-right\\\" href=\\\"#\\\" role=\\\"button\\\" (click)=\\\"onAddToBasket(product)\\\" >add to basket</a>\\n  </div>\\n</div>\\n\"","import { Component, OnInit, Input, EventEmitter, Output } from '@angular/core';\nimport { Location } from '@angular/common';\n\nimport { Product } from '../model/product';\nimport { Basket } from '../model/basket';\n\nimport { InventoryService } from '../services/inventory.service';\nimport { BasketService } from '../services/basket.service';\n\n@Component({\n  selector: 'app-details',\n  templateUrl: './details.component.html',\n  styleUrls: ['./details.component.css']\n})\nexport class DetailsComponent implements OnInit {\n\n  @Input() product: Product;\n  basket: Basket;\n  @Output() updatedBasket = new EventEmitter<Basket>();\n\n  constructor(\n    private inventoryService: InventoryService,\n    private basketService: BasketService\n  ) {}\n\n  ngOnInit() {\n    console.log(\"DetailsComponent ngOnInit\");\n  }\n\n  onAddToBasket(product: Product) : void  {\n    console.log(\"Add to basket : \"  + product.id + \":\" + product.name );\n    this.basketService.addProductToBasket(product).subscribe( (basket : Basket) => {\n      console.log(\"AppComponent : createBasket : \" +basket.id);\n      this.basket = basket;\n      this.updatedBasket.emit(basket);\n    });\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2ludmVudG9yeS9pbnZlbnRvcnkuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<!-- <div *ngIf=\\\"products\\\"> -->\\n  <div class=\\\"row\\\">\\n        <div class=\\\"list-group\\\">\\n          <div class=\\\"media\\\">\\n            <a href=\\\"#\\\" (click)=\\\"onClickProduct(product)\\\" *ngFor=\\\"let product of products\\\" class=\\\"list-group-item\\\">\\n              <div class=\\\"media-left media-middle\\\">\\n                <img src=\\\"assets/{{product.name | lowercase}}.jpeg\\\" class=\\\"media-object\\\" height=\\\"42\\\" width=\\\"42\\\">\\n              </div>\\n              <div class=\\\"media-body media-middle\\\">{{product.name | titlecase}}</div>\\n            </a>\\n          </div>\\n      </div>\\n  </div>\\n<!-- </div> -->\\n\"","import { Component, OnInit, Output, Input, EventEmitter } from '@angular/core';\nimport { Product } from '../model/product';\nimport { InventoryService } from '../services/inventory.service';\n\n@Component({\n  selector: 'app-inventory',\n  templateUrl: './inventory.component.html',\n  styleUrls: ['./inventory.component.css']\n})\nexport class InventoryComponent implements OnInit {\n  @Input() products: Product[];\n  @Output() selectedProduct = new EventEmitter<Product>();\n\n  product: Product;\n  constructor(\n    private inventoryService: InventoryService,\n  ) {}\n\n  ngOnInit() {\n    console.log(\"InventoryComponent : products : \" + this.products);\n  }\n\n  onClickProduct(product: Product): void {\n    console.log(\"InventoryComponent : product clicked : \" + product.id + \":\" + product.name);\n    this.inventoryService.getProductById(product.id).subscribe( (product : Product) => {\n      console.log(\"InventoryComponent : product received : \" + product);\n      this.selectedProduct.emit(product);\n      this.product = product;\n    });\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div *ngIf=\\\"!loggedIn; else elseBlock\\\">\\n<form class=\\\"navbar-form navbar-right\\\" role=\\\"login\\\" #loginForm=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n  <div class=\\\"form-group\\\">\\n    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"username\\\" placeholder=\\\"username\\\" [(ngModel)]=\\\"user.username\\\" name=\\\"username\\\">\\n    <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"password\\\" placeholder=\\\"password\\\" [(ngModel)]=\\\"user.password\\\" name=\\\"password\\\" ng-reflect-name=\\\"password\\\">\\n  </div>\\n  <button type=\\\"submit\\\" class=\\\"btn btn-default\\\">Sign in</button>\\n</form>\\n</div>\\n<ng-template #elseBlock><div class=\\\"navbar-brand navbar-right\\\">{{ greeting }}</div></ng-template>\\n\"","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\n\nimport { User } from '../model/user';\nimport { UserService } from '../services/user.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  user : User = new User();\n  @Output() loggedInUser = new EventEmitter<User>();\n  loggedIn : boolean = false;\n\n  constructor(private userService: UserService) { }\n\n  ngOnInit() {\n    console.log(\"LoginComponent ngOnInit\");\n  }\n\n  onSubmit(): void{\n    console.log(\"login\");\n    console.log(\"user.username : \" + this.user.username);\n    console.log(\"user.password : \" + this.user.password);\n    this.userService.login(this.user).subscribe( (user: User) => {\n      console.log(\"LoginComponent : user : \" + user.id + \" : \" + user.username);\n      this.loggedIn = true;\n      this.loggedInUser.emit(user);\n      this.user = user;\n    });\n  }\n  get greeting() { return \"Welcome \" + this.user.username + \" !\"}\n  get diagnostic() { return JSON.stringify(this.user); }\n}\n","import { Product } from './product';\n\n\nexport class Basket {\n  id: number;\n  userId: string;\n  products?: Product[];\n  total: string;\n}\n","export class Product {\n  id: number;\n  name: string;\n  price: number;\n  basketIndex: number;\n}\n","export class User {\n\n  id?: number;\n  basketId?: number;\n  username: String;\n  password?: String;\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable ,  of } from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\n\nimport { Basket } from '../model/basket';\nimport { Product } from '../model/product';\n\nimport { environment } from '../../environments/environment';\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n\n@Injectable()\nexport class BasketService {\n\n  basket : Basket;\n\n  private basketUrl = `${environment.basket_backend}/api/basket`;\n\n  constructor(private http: HttpClient) { }\n\n  setBasket(basket: Basket): void{\n    this.basket = basket;\n  }\n\n  getBasket(basket: Basket): Observable<Basket> {\n    console.log(\"getBasketForUser\");\n    const url = `${this.basketUrl}/get/${basket.id}`;\n    return this.http.get<Basket>(url)\n    .pipe(\n      tap(_ => this.log(`fetched basket`)),\n      catchError(this.handleError<Basket>(`getBasket`))\n    );\n  }\n\n  addProductToBasket(product: Product): Observable<Basket> {\n    console.log(\"addProductToBasket\");\n    const url = `${this.basketUrl}/${this.basket.id}/add/${product.id}`;\n    return this.http.put<Basket>(url, null, httpOptions)\n    .pipe(\n      tap(_ => this.log(`fetched basket`)),\n      catchError(this.handleError<Basket>(`createBasket`))\n    );\n  }\n\n  removeProductFromBasket(itemAtIndex: number): Observable<Basket> {\n    console.log(\"removeProductFromBasket\");\n    const url = `${this.basketUrl}/${this.basket.id}/remove/${itemAtIndex}`;\n    return this.http.delete<Basket>(url, httpOptions)\n    .pipe(\n      tap(_ => this.log(`fetched basket`)),\n      catchError(this.handleError<Basket>(`createBasket`))\n    );\n\n  }\n  /**\n   * Handle Http operation that failed.\n   * Let the app continue.\n   * @param operation - name of the operation that failed\n   * @param result - optional value to return as the observable result\n   */\n  private handleError<T> (operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n\n      // TODO: send the error to remote logging infrastructure\n      console.error(error); // log to console instead\n\n      // TODO: better job of transforming error for user consumption\n      this.log(`${operation} failed: ${error.message}`);\n\n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n\n  /** Log a HeroService message with the MessageService */\n  private log(message: string) {\n    console.log('BasketService: ' + message);\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable ,  of } from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\n\nimport { environment } from '../../environments/environment';\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n\n@Injectable()\nexport class CategoriesService {\n\n  private catgegoriesUrl = `${environment.inventory_backend}/api/products/types`;\n\n  constructor(private http: HttpClient) { }\n\n  getCategories(): Observable<string[]> {\n    const url = `${this.catgegoriesUrl}`;\n    return this.http.get<string[]>(url)\n    .pipe(\n      tap(products => this.log(`fetched all categories`)),\n      catchError(this.handleError<string[]>(`getCategories`))\n    );\n  }\n\n  /**\n   * Handle Http operation that failed.\n   * Let the app continue.\n   * @param operation - name of the operation that failed\n   * @param result - optional value to return as the observable result\n   */\n  private handleError<T> (operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n\n      // TODO: send the error to remote logging infrastructure\n      console.error(error); // log to console instead\n\n      // TODO: better job of transforming error for user consumption\n      this.log(`${operation} failed: ${error.message}`);\n\n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n\n  /** Log a HeroService message with the MessageService */\n  private log(message: string) {\n    console.log('CategoriesService: ' + message);\n  }\n}\n","import { Injectable} from '@angular/core';\n\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable ,  of } from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\nimport { Product } from '../model/product';\n\nimport { environment } from '../../environments/environment';\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n\n@Injectable()\nexport class InventoryService {\n  private tracer;\n  private inventoryUrl = `${environment.inventory_backend}/api/products`;\n\n  constructor(private http: HttpClient) {}\n\n  getAllProducts(): Observable<Product[]> {\n\n    const url = `${this.inventoryUrl}/all`;\n    return this.http.get<Product[]>(url)\n    .pipe(\n      tap(products => this.log(`fetched all products`)),\n      catchError(this.handleError<Product[]>(`getAllProducts all`))\n    );\n  }\n\n  getProductsByType(type: string): Observable<Product[]> {\n    const url = `${this.inventoryUrl}/type/${type}`;\n    return this.http.get<Product[]>(url).pipe(\n      tap(_ => this.log(`fetched products type=${type}`)),\n      tap(products => this.productListReceived(products)),\n      catchError(this.handleError<Product[]>(`getProductsByType type=${type}`))\n    );\n  }\n\n  getProductById(id: number): Observable<Product> {\n    const url = `${this.inventoryUrl}/${id}`;\n    return this.http.get<Product>(url).pipe(\n      tap(_ => this.log(`fetched product id=${id}`)),\n      tap(product => this.productReceived(product)),\n      catchError(this.handleError<Product>(`getProduct id=${id}`))\n    );\n  }\n\n  productListReceived(products : Product[]) : void {\n    console.log(\"InventoryService : productListReceived : products : \" + products);\n  }\n\n  productReceived(product: Product) : void {\n    console.log(\"InventoryService : productReceived : product : \"  + product.id + \":\" + product.name);\n  }\n  /**\n   * Handle Http operation that failed.\n   * Let the app continue.\n   * @param operation - name of the operation that failed\n   * @param result - optional value to return as the observable result\n   */\n  private handleError<T> (operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n\n      // TODO: send the error to remote logging infrastructure\n      console.error(error); // log to console instead\n\n      // TODO: better job of transforming error for user consumption\n      this.log(`${operation} failed: ${error.message}`);\n\n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n\n  /** Log a HeroService message with the MessageService */\n  private log(message: string) {\n    console.log('InventoryService: ' + message);\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable ,  of } from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\n\nimport { User } from '../model/user';\n\nimport { environment } from '../../environments/environment';\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n\n@Injectable()\nexport class UserService {\n\n  private userUrl = `${environment.user_backend}/api`;\n\n  constructor(private http: HttpClient) { }\n\n  login(user : User): Observable<User> {\n    console.log(\"UserService creating user\");\n    const url = `${this.userUrl}/login`;\n    return this.http.post<User>(url, user, httpOptions)\n    .pipe(\n      tap(_ => this.log('fetched user')),\n      catchError(this.handleError<User>('login'))\n    );\n  }\n\n  /**\n   * Handle Http operation that failed.\n   * Let the app continue.\n   * @param operation - name of the operation that failed\n   * @param result - optional value to return as the observable result\n   */\n  private handleError<T> (operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n\n      // TODO: send the error to remote logging infrastructure\n      console.error(error); // log to console instead\n\n      // TODO: better job of transforming error for user consumption\n      this.log(`${operation} failed: ${error.message}`);\n\n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n\n  /** Log a HeroService message with the MessageService */\n  private log(message: string) {\n    console.log('UserService: ' + message);\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'titleCase'\n})\nexport class TitleCasePipe implements PipeTransform {\n\n  transform(input : string): string {\n    return input.length === 0 ? '' :\n      input.replace(/\\w\\S*/g, (txt => txt[0].toUpperCase() + txt.substr(1).toLowerCase() ));\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  inventory_backend : \"http://api-gateway-amazin-dev.apps.ocp.datr.eu\",\n  basket_backend : \"http://api-gateway-amazin-dev.apps.ocp.datr.eu\",\n  user_backend : \"http://api-gateway-amazin-dev.apps.ocp.datr.eu\"\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}