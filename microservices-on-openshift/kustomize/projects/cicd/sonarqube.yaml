kind: ImageStream
apiVersion: image.openshift.io/v1
metadata:
  name: sonarqube
  namespace: cicd
spec:
  lookupPolicy:
    local: false
  tags:
    - name: '7.9'
      from:
        kind: DockerImage
        name: 'nexus-docker-cicd.apps.shared-rhpds.rhpds.openshift.opentlc.com/repository/docker/sonarqube:7.9'
      generation: 1
      importPolicy:
        insecure: true
      referencePolicy:
        type: Source
---
apiVersion: build.openshift.io/v1
kind: BuildConfig
metadata:
  labels:
    app: sonarqube
  name: sonarqube-docker-build
  namespace: cicd
spec:
  failedBuildsHistoryLimit: 5
  output:
    pushSecret:
      name: rhpds-nexus-dockercfg
    to:
      kind: DockerImage
      name: nexus-docker-cicd.apps.shared-rhpds.rhpds.openshift.opentlc.com/repository/docker/sonarqube:7.9
  postCommit: {}
  resources: {}
  runPolicy: Serial
  source:
    contextDir: cicd_tools/sonarqube
    git:
      ref: master
      uri: https://github.com/justindav1s/microservices-on-openshift.git
    type: Git
  strategy:
    dockerStrategy:
      dockerfilePath: Dockerfile
      env:
      - name: SONARQUBE_VERSION
        value: "7.9"
      - name: DOCKERFILE_PATH
        value: cicd_tools/sonarqube
    type: Docker
  triggers: []
---    
apiVersion: apps.openshift.io/v1
kind: DeploymentConfig
metadata:
  labels:
    app: sonarqube
    deploymentconfig: sonarqube
  name: sonarqube
  namespace: cicd
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    app: sonarqube
    deploymentconfig: sonarqube
  strategy:
    activeDeadlineSeconds: 21600
    resources: {}
    rollingParams:
      intervalSeconds: 1
      maxSurge: 25%
      maxUnavailable: 25%
      timeoutSeconds: 600
      updatePeriodSeconds: 1
    type: Rolling
  template:
    metadata:
      annotations:
        openshift.io/generated-by: OpenShiftNewApp
      creationTimestamp: null
      labels:
        app: sonarqube
        deploymentconfig: sonarqube
        tuned.openshift.io/elasticsearch: ""
    spec:
      containers:
      - env:
        - name: SONARQUBE_JDBC_PASSWORD
          value: sonar
        - name: SONARQUBE_JDBC_URL
          value: jdbc:postgresql://postgresql/sonar
        - name: SONARQUBE_JDBC_USERNAME
          value: sonar
        image: ' '
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: 9000
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 20
          successThreshold: 1
          timeoutSeconds: 5
        name: sonarqube
        ports:
        - containerPort: 9000
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: 9000
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 20
          successThreshold: 1
          timeoutSeconds: 5
        resources:
          limits:
            cpu: "1"
            memory: 2Gi
          requests:
            cpu: 200m
            memory: 1Gi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /opt/sonarqube/data
          name: sonarqube-data
        - mountPath: /opt/sonarqube/extensions
          name: sonarqube-extensions
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: sonarqube
      serviceAccountName: sonarqube
      terminationGracePeriodSeconds: 30
      volumes:
      - name: sonarqube-data
        persistentVolumeClaim:
          claimName: sonarqube-data
      - name: sonarqube-extensions
        persistentVolumeClaim:
          claimName: sonarqube-extensions
  test: false
  triggers:
  - type: ConfigChange
  - imageChangeParams:
      automatic: true
      containerNames:
      - sonarqube
      from:
        kind: ImageStreamTag
        name: sonarqube:7.9
        namespace: cicd
    type: ImageChange
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: sonarqube
  name: sonarqube
  namespace: cicd
spec:
  ports:
  - name: sonarqube
    port: 9000
    protocol: TCP
    targetPort: 9000
  selector:
    app: sonarqube
    deploymentconfig: sonarqube
  sessionAffinity: None
  type: ClusterIP
---    
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  labels:
    app: sonarqube
  name: sonarqube
  namespace: cicd
spec:
  tls:
    termination: edge
  to:
    kind: Service
    name: sonarqube
    weight: 100
  wildcardPolicy: None
---      
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app: sonarqube
  name: sonarqube-data
  namespace: cicd
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
---    
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app: sonarqube
  name: sonarqube-extensions
  namespace: cicd
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
