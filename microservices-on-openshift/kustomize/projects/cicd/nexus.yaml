---    
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: nexus
  name: nexus
  namespace: cicd
spec:
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  replicas: 1
  selector:
    matchLabels:
      app: nexus
      deploymentconfig: nexus
    app: nexus
    deploymentconfig: nexus
  strategy:
    activeDeadlineSeconds: 21600
    recreateParams:
      timeoutSeconds: 600
    resources: {}
    type: Recreate
  template:
    metadata:
      labels:
        app: nexus
        deploymentconfig: nexus
    spec:
      containers:
      - image: sonatype/nexus3:latest
        imagePullPolicy: Always
        livenessProbe:
          exec:
            command:
            - echo
            - ok
          failureThreshold: 3
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: nexus
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: 8081
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          limits:
            memory: 2Gi
          requests:
            memory: 1Gi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /nexus-data
          name: nexus-data
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - name: nexus-data
        persistentVolumeClaim:
          claimName: nexus-pv
  test: false
  triggers:
  - type: ConfigChange
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: nexus
  name: nexus
  namespace: cicd
spec:
  ports:
  - name: 8081-tcp
    port: 8081
    protocol: TCP
    targetPort: 8081
  selector:
    deploymentconfig: nexus
  sessionAffinity: None
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: nexus
  name: nexus-docker
  namespace: cicd
spec:
  ports:
  - name: 5000-tcp
    port: 5000
    protocol: TCP
    targetPort: 5000
  selector:
    deploymentconfig: nexus
  sessionAffinity: None
  type: ClusterIP 
---  
kind: Ingress
apiVersion: extensions/v1beta1
metadata:
  name: nexus
spec:
  tls:
    - hosts:
        - nexus-cicd.apps.shared-rhpds.rhpds.openshift.opentlc.com
      # secretName: datr-eu-certs  
  rules:
    - host: nexus-cicd.apps.shared-rhpds.rhpds.openshift.opentlc.com
      http:
        paths:
          - path: /
            backend:
              serviceName: nexus
              servicePort: 8081
---
kind: Ingress
apiVersion: extensions/v1beta1
metadata:
  name: nexus-docker
spec:
  tls:
    - hosts:
        - nexus3-docker-cicd.apps.shared-rhpds.rhpds.openshift.opentlc.com
      # secretName: datr-eu-certs  
  rules:
    - host: nexus3-docker-cicd.apps.shared-rhpds.rhpds.openshift.opentlc.com
      http:
        paths:
          - path: /
            backend:
              serviceName: nexus-docker
              servicePort: 5000 
---
apiVersion: v1
kind: Route
metadata:
  annotations:
  labels:
    app: nexus
  name: nexus
spec:
  tls:
    termination: edge
  port:
    targetPort: 8081-tcp
  to:
    kind: Service
    name: nexus
---
apiVersion: v1
kind: Route
metadata:
  annotations:
  labels:
    app: nexus
  name: nexus-docker
spec:
  tls:
    termination: edge
  port:
    targetPort: 5000-tcp
  to:
    kind: Service
    name: nexus-docker    
---  
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app: nexus
  name: nexus-pv
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi  