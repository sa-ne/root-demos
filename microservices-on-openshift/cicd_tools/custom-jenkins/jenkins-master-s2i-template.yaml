apiVersion: v1
kind: Template
labels:
  template: jenkins-master-s2i
metadata:
  annotations:
    description: Creates a Jenkins master using S2I for installing plugins and configuring Jenkins
    iconClass: icon-jenkins
    tags: instant-app,jenkins
  name: jenkins-master-s2i
parameters:
- description: Git source URI for Jenkins S2I
  name: SOURCE_REPOSITORY_URL
  required: true
  value: https://github.com/justindav1s/microservices-on-openshift.git

- description: Git branch/tag reference
  name: SOURCE_REPOSITORY_REF
  value: master

- description: Git Source Secret
  displayName: Source Secret
  name: GIT_SRC_SECRET
  value: gitsecret

- description: Path within Git project to build; empty for root project directory.
  name: CONTEXT_DIR
  value: cicd_tools/custom-jenkins/master

- description: Maximum amount of memory the container can use.
  displayName: Memory Limit
  name: MEMORY_LIMIT
  value: 2Gi

- description: Password for the Jenkins user.
  displayName: Jenkins Password
  generate: expression
  name: JENKINS_PASSWORD
  value: admin

- description: Volume space available for data, e.g. 512Mi, 2Gi.
  displayName: Volume Capacity
  name: VOLUME_CAPACITY
  required: true
  value: 1Gi

- description: Project that owns this Jenkins
  displayName: Project
  name: PROJECT
  value: defaultproject

- description: Docker version tag for Jenkins base image
  displayName: Base Image Version Tag
  name: BASE_IMAGE_VERSION_TAG
  value: "2"

objects:

#From ImageStream
- apiVersion: v1
  kind: ImageStream
  metadata:
    labels:
      app: jenkins-build-tools
    annotations:
    name: base-jenkins2
  spec:
    lookupPolicy:
      local: false
    tags:
    - annotations: null
      from:
        kind: DockerImage
        name: "registry.access.redhat.com/openshift3/jenkins-2-rhel7:${BASE_IMAGE_VERSION_TAG}"
      importPolicy: {}
      name: ${BASE_IMAGE_VERSION_TAG}
      referencePolicy:
        type: Source

#To Image Stream
- apiVersion: v1
  kind: ImageStream
  metadata:
    labels:
      app: jenkins-build-tools
      name: jenkins
    name: custom-jenkins2-${PROJECT}


- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      service.alpha.openshift.io/dependencies: '[{"name": "jenkins-jnlp", "namespace":"", "kind": "Service"}]'
      service.openshift.io/infrastructure: "true"
    labels:
      app: jenkins-build-tools
      name: jenkins
    name: jenkins
  spec:
    ports:
    - name: web
      port: 80
      protocol: TCP
      targetPort: 8080
    selector:
      app: jenkins-build-tools
      name: jenkins
      deploymentconfig: jenkins
    sessionAffinity: None
    type: ClusterIP

- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: jenkins-build-tools
    name: jenkins-jnlp
  spec:
    ports:
    - name: agent
      protocol: TCP
      port: 50000
      targetPort: 50000
    selector:
      name: jenkins
    sessionAffinity: None
    type: ClusterIP

- apiVersion: v1
  kind: Route
  metadata:
    annotations:
      template.openshift.io/expose-uri: http://{.spec.host}{.spec.path}
    labels:
      app: jenkins-build-tools
      name: jenkins
    name: jenkins
  spec:
    port:
      targetPort: web
    tls:
      insecureEdgeTerminationPolicy: Redirect
      termination: edge
    to:
      kind: Service
      name: jenkins

- apiVersion: v1
  kind: BuildConfig
  metadata:
    labels:
      app: jenkins-build-tools
      name: jenkins
    name: jenkins
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: custom-jenkins2-${PROJECT}:latest
    resources:
      limits:
        memory: ${MEMORY_LIMIT}
    source:
      contextDir: ${CONTEXT_DIR}
      git:
        uri: ${SOURCE_REPOSITORY_URL}
        ref: ${SOURCE_REPOSITORY_REF}
      sourceSecret:
        name: ${GIT_SRC_SECRET}
      type: Git
    strategy:
      sourceStrategy:
        env:
        - name: JAVA_OPTS
          value: -XX:MaxMetaspaceSize=1204m -Djenkins.install.runSetupWizard=false
        from:
          kind: ImageStreamTag
          name: base-jenkins2:${BASE_IMAGE_VERSION_TAG}
      type: Source
    triggers:
    - type: ConfigChange
    - imageChange: {}
      type: ImageChange
  status:
    lastVersion: 0

- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: jenkins-build-tools
      name: jenkins
    name: jenkins
  spec:
    replicas: 1
    selector:
      app: jenkins-build-tools
      deploymentconfig: jenkins
      name: jenkins
    strategy:
      type: Recreate
    template:
      metadata:
        labels:
          app: jenkins-build-tools
          deploymentconfig: jenkins
          name: jenkins
      spec:
        containers:
        - env:
          - name: OPENSHIFT_ENABLE_OAUTH
            value: 'true'
          - name: OPENSHIFT_ENABLE_REDIRECT_PROMPT
            value: 'true'
          - name: KUBERNETES_MASTER
            value: 'https://kubernetes.default:443'
          - name: KUBERNETES_TRUST_CERTIFICATES
            value: 'true'
          - name: JENKINS_SERVICE_NAME
            value: jenkins
          - name: JNLP_SERVICE_NAME
            value: jenkins-jnlp
          - name: JENKINS_PASSWORD
            value: ${JENKINS_PASSWORD}
          imagePullPolicy: Always
          name: jenkins
          ports:
          - containerPort: 80
            protocol: TCP
          - containerPort: 50000
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          volumeMounts:
          - mountPath: /var/lib/jenkins
            name: jenkins-data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        securityContext: {}
        serviceAccount: jenkins
        serviceAccountName: jenkins
        terminationGracePeriodSeconds: 30
        volumes:
        - name: jenkins-data
          persistentVolumeClaim:
            claimName: jenkins
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - jenkins
        from:
          kind: ImageStreamTag
          name: custom-jenkins2-${PROJECT}:latest
      type: ImageChange

- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    finalizers:
    - kubernetes.io/pvc-protection
    labels:
      app: jenkins-build-tools
    name: jenkins
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: ${VOLUME_CAPACITY}

- apiVersion: v1
  kind: ServiceAccount
  metadata:
    annotations:
      serviceaccounts.openshift.io/oauth-redirectreference.jenkins: '{"kind":"OAuthRedirectReference","apiVersion":"v1","reference":{"kind":"Route","name":"jenkins"}}'
    labels:
      app: jenkins-build-tools
    name: jenkins

- apiVersion: rbac.authorization.k8s.io/v1
  kind: RoleBinding
  metadata:
    name: jenkins_edit
    labels:
      app: jenkins-build-tools
  subjects:
  - kind: ServiceAccount
    name: jenkins
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: edit