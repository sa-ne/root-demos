apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: image-builder-pipeline-template
objects:

- apiVersion: tekton.dev/v1alpha1
  kind: PipelineResource
  metadata:
    name: microservices-on-openshift-git-repo
  spec:
    type: git
    params:
      - name: revision
        value: "${GIT_REF}"
      - name: url
        value: "${GIT_REPO}"

  # This demo modifies the cluster (deploys to it) you must use a service
  # account with permission to admin the cluster (or make your default user an admin
  # of the `default` namespace with default-cluster-admin.
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    name: default-cluster-admin
  subjects:
    - kind: ServiceAccount
      name: default
      namespace: default
  roleRef:
    kind: ClusterRole
    name: cluster-admin
    apiGroup: rbac.authorization.k8s.io

- apiVersion: tekton.dev/v1alpha1
  kind: Task
  metadata:
    name: image-build
  spec:
    inputs:
      resources:
        - name: checkout-dir
          type: git
    steps:
      - name: mvn-get-fat-jar
        image: '${JAVA_BUILDER_IMAGE}'
        workingDir: '/workspace/checkout-dir/${GIT_REPO_CONTEXT}'
        command: ['/bin/bash']
        args: ['-c', '${MVN_COMMAND_STUB} dependency:copy -DstripVersion=true -Dartifact=${APP_GROUP_ID}:${APP_ARTIFACT_ID}:${APP_VERSION_ID}:${APP_PACKAGING} -DoutputDirectory=/workspace']
      - name : check-fat-jar
        image: '${JAVA_BUILDER_IMAGE}'
        command: ['/bin/bash']
        workingDir: '/workspace'
        args: ['-c', 'ls -ltr']
      - name : rename-fat-jar
        image: '${JAVA_BUILDER_IMAGE}'
        command: ['/bin/bash']
        workingDir: '/workspace'
        args: ['-c', 'cp $(find . -type f -name "${APP_ARTIFACT_ID}-*.${APP_PACKAGING}")  ${APP_ARTIFACT_ID}-${APP_VERSION_ID}.${APP_PACKAGING}']
      - name : check-fat-jar-post-rename
        image: '${JAVA_BUILDER_IMAGE}'
        command: ['/bin/bash']
        workingDir: '/workspace'
        args: ['-c', 'ls -ltr']

- apiVersion: tekton.dev/v1alpha1
  kind: Pipeline
  metadata:
    name: image-builder-pipeline
  spec:
    resources:
    - name: source-repo
      type: git
    tasks:
      - name: image-build
        taskRef:
          name: image-build
        resources:
          inputs:
            - name: checkout-dir
              resource: source-repo

- apiVersion: tekton.dev/v1alpha1
  kind: PipelineRun
  metadata:
    name: image-builder-pipeline-run
  spec:
    pipelineRef:
      name: image-builder-pipeline
    serviceAccount: 'default'
    resources:
      - name: source-repo
        resourceRef:
          name: microservices-on-openshift-git-repo

parameters:
- name: APP_NAME
  required: true
  value: "inventory-build"
- name: APP_GROUP_ID
  required: true
  value: "org.jnd.microservices"
- name: APP_ARTIFACT_ID
  required: true
  value: "inventory"
- name: APP_VERSION_ID
  required: true
  value: "0.0.1-SNAPSHOT"
- name: APP_PACKAGING
  required: true
  value: "jar"
- name: GIT_REPO
  required: true
  value: "https://github.com/justindav1s/microservices-on-openshift.git"
- name: GIT_REPO_CONTEXT
  required: true
  value: "src/inventory"
- name: GIT_REF
  required: true
  value: "master"
- name: JAVA_BUILDER_IMAGE
  required: true
  value: "docker-registry.default.svc:5000/tekton-test/java-builder"
- name: MVN_COMMAND_STUB
  required: true
  value: "mvn -B -U -q -s ../settings.xml -Dmaven.wagon.http.ssl.insecure=true -Dmaven.wagon.http.ssl.allowall=true"
