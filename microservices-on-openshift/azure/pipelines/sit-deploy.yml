# Required variables
#
# ocp-srv-con : which openshift cluster to connect to
# ocp-project : which openshift project to deploy to
# ocp-sa-template : path to serviceAccount template file
# service-name : the name of the service/image/pod to be deployed
# spring-active-profile : the spring.active.profile to use : dev, int, uat, prd etc
# ocp-deploy-template : path to deployment template
# reg-url : redistry url
# image-tag : image registry tag
# replicas : required number of pods

trigger:
- sitdeploy

stages:
- stage: Build_and_Deploy_to_Openshift_FAT_Environment
  jobs:

  - job: Deploy_to_Openshift_Cluster
    timeoutInMinutes: 10
    variables:
    - template: ../config/sit.yml
    pool:
      vmImage: 'ubuntu-latest'

    steps:
    - task: oc-setup@2
      displayName: Setup oc
      inputs:
        openshiftService: ${{ variables.ocp_srv_con }}

    - script: |

        oc delete project  ${{ variables.ocp_project }} --ignore-not-found=true
        oc new-project ${{ variables.ocp_project }} 2> /dev/null
        while [ $? \> 0 ]; do
            sleep 1
            printf "."
            oc new-project ${{ variables.ocp_project }} 2> /dev/null
        done

      displayName: Create OCP project

    - script: |

        oc new-app -f ${{ variables.ocp_sa_template }} \
          -p APPLICATION_NAME=${{ variables.service_name }} \
          -n ${{ variables.ocp_project }}

        oc create secret docker-registry nexus-dockercfg \
          --docker-server=dockerreg-cicd.apps.shared-rhpds.rhpds.openshift.opentlc.com \
          --docker-username=admin \
          --docker-password=monkey123 \
          --docker-email=justinndavis@gmail.com \
          -n ${{ variables.ocp_project }}

        oc secrets link ${{ variables.service_name }}-sa nexus-dockercfg --for=pull -n ${{ variables.ocp_project }}

      displayName: Create ServiceAccount

    - script: |

        oc delete configmap ${{ variables.service_name }}-${{ variables.spring_active_profile }}-config \
          --ignore-not-found=true \
          -n ${{ variables.ocp_project }}
        oc create configmap ${{ variables.service_name }}-${{ variables.spring_active_profile }}-config \
          --from-file=src/main/resources/config.${{ variables.spring_active_profile }}.properties \
          -n ${{ variables.ocp_project }}

      displayName: Set up ConfigMap

    - script: |

        oc new-app -f ${{ variables.ocp_deploy_template }} \
          -p APPLICATION_NAME=${{ variables.service_name }} \
          -p REG_URL=${{ variables.reg_url }} \
          -p IMAGE_TAG=${{ variables.image_tag }} \
          -p SPRING_ACTIVE_PROFILE=${{ variables.spring_active_profile }} \
          -p REPLICAS=${{ variables.replicas }} \
          -n ${{ variables.ocp_project }}

          oc rollout status dc/${{ variables.service_name }} -w

      displayName: Deploy Image
